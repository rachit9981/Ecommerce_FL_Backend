name: Python Backend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server
        env:
          # single source of truth for the paths
          REMOTE_REPO_DIR: /root/deploy/Ecommerce_FL_Backend
          REMOTE_VENV_DIR: /root/venvs/backend_env
          TMUX_SESSION:     backend_session
          GIT_URL: https://${{ secrets.GH_PAT }}@github.com/LazyyVenom/Ecommerce_FL_Backend.git
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" bash -s <<EOSSH
            set -e

            # ── 1. Make variables available on the server ────────────────────
            REMOTE_REPO_DIR="${REMOTE_REPO_DIR}"
            REMOTE_VENV_DIR="${REMOTE_VENV_DIR}"
            TMUX_SESSION="${TMUX_SESSION}"
            GIT_URL="${GIT_URL}"

            # ── 2. One‑time: trust GitHub host key ───────────────────────────
            mkdir -p ~/.ssh
            if ! grep -q github.com ~/.ssh/known_hosts 2>/dev/null; then
              ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts 2>/dev/null
            fi

            # ── 3. Clone or update repo ──────────────────────────────────────
            echo "📁  Ensuring repo folder exists…"
            mkdir -p "\$REMOTE_REPO_DIR"
            cd "\$REMOTE_REPO_DIR"

            if [ ! -d .git ]; then
              echo "🔰  First‑time clone…"
              git clone "\$GIT_URL" .
            else
              echo "🔄  Pulling latest code…"
              git remote set-url origin "\$GIT_URL"
              git fetch --prune
              git reset --hard origin/main
            fi

            # ── 4. Update venv & dependencies ───────────────────────────────
            if [ ! -d "\$REMOTE_VENV_DIR" ]; then
              python3 -m venv "\$REMOTE_VENV_DIR"
            fi
            source "\$REMOTE_VENV_DIR/bin/activate"
            pip install --upgrade pip
            pip install --upgrade -r requirements.txt

            # ── 5. Restart tmux session ──────────────────────────────────────
            echo "🎬  Restarting tmux session '\$TMUX_SESSION'…"
            if tmux has-session -t "\$TMUX_SESSION" 2>/dev/null; then
              tmux kill-session -t "\$TMUX_SESSION"
            fi
            tmux new-session -d -s "\$TMUX_SESSION" \
              "cd '\$REMOTE_REPO_DIR' && source '\$REMOTE_VENV_DIR/bin/activate' && gunicorn --bind 0.0.0.0:8000 anand_mobiles.wsgi"

            echo "✅  Backend deployed & running."
